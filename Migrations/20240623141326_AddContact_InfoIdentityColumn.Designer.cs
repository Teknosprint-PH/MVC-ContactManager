// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tech_challenge.Data;

#nullable disable

namespace tech_challenge.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240623141326_AddContact_InfoIdentityColumn")]
    partial class AddContact_InfoIdentityColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tech_challenge.Models.Contact_Info", b =>
                {
                    b.Property<int?>("contact_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contact_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("contact_id"));

                    b.Property<string>("contact_address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("contact_address");

                    b.Property<string>("contact_firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_firstname");

                    b.Property<string>("contact_lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_lastname");

                    b.Property<string>("contact_middlename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contact_middlename");

                    b.Property<string>("contact_no")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contact_no");

                    b.Property<string>("contact_status")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("contact_status");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("created_dt")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_dt");

                    b.Property<string>("updated_by")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("updated_dt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_dt");

                    b.HasKey("contact_id");

                    b.ToTable("tbl_contacts");

                    b.HasData(
                        new
                        {
                            contact_id = 1,
                            contact_address = "Tipolo, Mandaue City",
                            contact_firstname = "Antonio",
                            contact_lastname = "Codilla",
                            contact_middlename = "Fabillar",
                            contact_no = "1234-567890123",
                            contact_status = "AC",
                            created_by = "JCASO",
                            created_dt = new DateTime(2024, 6, 23, 22, 13, 26, 32, DateTimeKind.Local).AddTicks(6063)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
